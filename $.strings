SECTION "STRINGS"

//Various string functions
//
//27/03/2016 PJ
//
//V1.00
// length(string) - returns a length in bytes
// concatSize(string1,string2) - returns the required vector size
// concat(string1,string2) - joins two strings and returns a vector
// left(string,length) - returns 'length' number of characters

//let STARTINIT()=3000

//example usage: -
//let s,t = "Hello there,"," Worldy!"
//let target = GETVEC(concatSize(s,t))
//let leftTest = GETVEC(5)
//target := concat(s,t)
//writes(target)
//let leftTest = GETVEC(10)
//leftTest := left(target,30)
//writes(leftTest)

get "LIBHDR"
get "SYSHDR"
GET "STRHDR"

let length(S) = VALOF
$(
   RESULTIS S%0 //size of string in bytes is held in byte 0
$)

let concatSize(S,T) = VALOF
$(
   //takes two strings and returns the length divided by 2
   //this is the size of the vector to hold the results
   RESULTIS (S%0 + T%0)/2
$)

and concat(S,T) = VALOF
$(
   let size, vector, ScharCount, TcharCount = 0,0,0,0

   size := concatSize(S,T)*2  //get the size of the total string (this is a VEC size so *2)
   ScharCount := S%0
   TcharCount := T%0

   vector := GETVEC(size)

   //loop through the first string and add it to the new vctor

   FOR N = 0 TO ScharCount DO
      vector%N := S%N

   FOR N = ScharCount+1 TO Size DO
      vector%(N) :=T%(N-ScharCount)

   vector%0 := Size

   RESULTIS vector

$)

let left(S,L) = VALOF
$(
   //return the left ## number of characters
   //if ## is greater than string size return the string as is

   let size, vector = 0,0

   size := S%0

   IF size < L THEN L :=size

   vector := GETVEC(L/2)

   FOR N = 0 TO L DO
      vector%N := S%N

   vector%0 :=L

   RESULTIS vector

$)






.





